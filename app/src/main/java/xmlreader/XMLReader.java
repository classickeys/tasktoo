
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package xmlreader;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class XMLReader {
    public static void main(String[] args) {
        try {
            Scanner scanner = new Scanner(System.in);
            System.out.print("Enter XML file name: ");
            String fileName = scanner.nextLine();

            File file = new File(fileName);
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document doc = builder.parse(file);

            System.out.print("Enter comma separated fields to extract: ");
            String fields = scanner.nextLine();
            String[] fieldList = fields.split(",");

            NodeList nodeList = doc.getElementsByTagName("record");
            List<ObjectNode> records = new ArrayList<>();

            for (int i = 0; i < nodeList.getLength(); i++) {
                Element element = (Element) nodeList.item(i);
                ObjectNode record = processRecord(element, fieldList);
                records.add(record);
            }

            ObjectMapper objectMapper = new ObjectMapper();
            ArrayNode arrayNode = objectMapper.valueToTree(records);
            String jsonString = objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(arrayNode);
            System.out.println(jsonString);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static ObjectNode processRecord(Element element, String[] fieldList) {
        ObjectNode record = new ObjectMapper().createObjectNode();
        for (String field : fieldList) {
            NodeList nodeList = element.getElementsByTagName(field);
            if (nodeList.getLength() > 0) {
                String value = nodeList.item(0).getTextContent();
                record.put(field, value);
            }
        }
        return record;
    }
}
